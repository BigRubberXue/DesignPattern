这些设计模式特别关注对象之间的通信。

策略模式 strategy ：策略模式定义了一系列算法，并将每个算法封装起来，使他们可以相互替换，且算法的变化不会影响到使用算法的客户。

模板方法模式 Template Method ： 定义一个操作中的算法的骨架，而将一些步骤延迟到子类中。模板方法使得子类可以不改变一个算法的结构即可重定义该算法的某些特定步骤。

观察者模式 Observer ：定义对象间的一种一对多的依赖关系，当一个对象的状态发生改变时，所有依赖于它的对象都得到通知并被自动更新。

迭代器模式 Iterator  : 提供一种方法顺序访问一个聚合对象中各个元素, 而又无须暴露该对象的内部表示。

责任链模式 ：

命令模式 ：

备忘录模式 ： 

状态模式 ： 

访问者模式 ： 

中介者模式 ：

解释器模式 ：